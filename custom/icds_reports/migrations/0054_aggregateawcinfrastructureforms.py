# -*- coding: utf-8 -*-
# flake8: noqa
# Generated by Django 1.11.14 on 2018-07-17 19:47
from __future__ import unicode_literals

from __future__ import absolute_import
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('icds_reports', '0053_aggregatechildhealthdailyfeedingforms'),
    ]

    operations = [
        migrations.RunSQL("""
            CREATE TABLE icds_dashboard_infrastructure_forms (
                state_id character varying(40) NOT NULL,
                month date NOT NULL,
                awc_id character varying(40) NOT NULL,
                latest_time_end_processed timestamp with time zone NOT NULL,
                awc_building smallint,
                source_drinking_water smallint,
                toilet_functional smallint,
                electricity_awc smallint,
                adequate_space_pse smallint,
                adult_scale_available smallint,
                baby_scale_available smallint,
                flat_scale_available smallint,
                adult_scale_usable smallint,
                baby_scale_usable smallint,
                cooking_utensils_usable smallint,
                infantometer_usable smallint,
                medicine_kits_usable smallint,
                stadiometer_usable smallint,
                CONSTRAINT icds_dashboard_infrastructure_for_cooking_utensils_usable_check CHECK ((cooking_utensils_usable >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_adequate_space_pse_check CHECK ((adequate_space_pse >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_adult_scale_available_check CHECK ((adult_scale_available >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_adult_scale_usable_check CHECK ((adult_scale_usable >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_awc_building_check CHECK ((awc_building >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_baby_scale_available_check CHECK ((baby_scale_available >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_baby_scale_usable_check CHECK ((baby_scale_usable >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_electricity_awc_check CHECK ((electricity_awc >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_flat_scale_available_check CHECK ((flat_scale_available >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_infantometer_usable_check CHECK ((infantometer_usable >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_medicine_kits_usable_check CHECK ((medicine_kits_usable >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_source_drinking_water_check CHECK ((source_drinking_water >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_stadiometer_usable_check CHECK ((stadiometer_usable >= 0)),
                CONSTRAINT icds_dashboard_infrastructure_forms_toilet_functional_check CHECK ((toilet_functional >= 0))
            ) PARTITION BY LIST (month)
        """, state_operations=[
            migrations.CreateModel(
                name='AggregateAwcInfrastructureForms',
                fields=[
                    ('state_id', models.CharField(max_length=40)),
                    ('month', models.DateField(help_text='Will always be YYYY-MM-01')),
                    ('awc_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                    ('latest_time_end_processed', models.DateTimeField(
                        help_text='The latest form.meta.timeEnd that has been processed for this case')),
                    ('awc_building', models.PositiveSmallIntegerField(null=True)),
                    ('source_drinking_water', models.PositiveSmallIntegerField(null=True)),
                    ('toilet_functional', models.PositiveSmallIntegerField(null=True)),
                    ('electricity_awc', models.PositiveSmallIntegerField(null=True)),
                    ('adequate_space_pse', models.PositiveSmallIntegerField(null=True)),
                    ('adult_scale_available', models.PositiveSmallIntegerField(null=True)),
                    ('baby_scale_available', models.PositiveSmallIntegerField(null=True)),
                    ('flat_scale_available', models.PositiveSmallIntegerField(null=True)),
                    ('adult_scale_usable', models.PositiveSmallIntegerField(null=True)),
                    ('baby_scale_usable', models.PositiveSmallIntegerField(null=True)),
                    ('cooking_utensils_usable', models.PositiveSmallIntegerField(null=True)),
                    ('infantometer_usable', models.PositiveSmallIntegerField(null=True)),
                    ('medicine_kits_usable', models.PositiveSmallIntegerField(null=True)),
                    ('stadiometer_usable', models.PositiveSmallIntegerField(null=True)),
                ],
                options={
                    'db_table': 'icds_dashboard_infrastructure_forms',
                },
            ),
        ]),
    ]
